<project name="coursePrototype" default="build" basedir=".">

  <!-- Invoke this build file as
     ant
       - to build the desired documents

     ant deploy
       - to build the desired documents and deploy to
         a webserver

     ant zip
       - to build the desired documents and create a zip file that
         could be uploaded and unpacked on a webserver (e.g., a Blackboard
         personal or course "content collection").

     ant imscc
       - to build the desired documents and create a course cartridge file
         that could be imported by most Learning Management Systems (LMS)

     ant bb
       - to build the desired documents and create a course cartridge file
         that could be imported into BlackBoard. This cartridge features the
	 entire course contents, a set of Learning Modules reflecting the
	 basic course outline, and calendar events for all dated items 
	 in the outline.

     ant bbthin
       - to build the desired documents and create a course cartridge file
         that could be imported into BlackBoard. This cartridge features 
         a set of Learning Modules reflecting the basic course outline, 
	 and calendar events for all dated items in the outline. 

         This "thin" cartridge does not, however, include the actual 
	 course documents. Those are presumed to have been deployed to
	 a separate web server. The imported Blackboard modules will 
	 link to those documents.

     ant canvas
       - to build the desired documents and create a course cartridge file
         that could be imported into Canvas. This cartridge features the
	 entire course contents, a set of Modules reflecting the
	 basic course outline, and calendar events for all dated items 
	 in the outline. In addition, documents built with a "canvas"
	 output format will be exported as Canvas (wiki) Pages.

     ant canvasthin
       - to build the desired documents and create a course cartridge file
         that could be imported into Canvas. This cartridge features 
         a set of Modules reflecting the basic course outline, 
	 and calendar events for all dated items in the outline. 
         In addition, documents built with a "canvas"
	 output format will be exported as Canvas (wiki) Pages.

         This "thin" cartridge does not, however, include the actual 
	 course documents. Those are presumed to have been deployed to
	 a separate web server. The imported Blackboard modules will 
	 link to those documents.
  
     ant clean
       - to clean out temporary and intermediate files generated 
         while building the real documents
  
     ant cleaner
       - remove all files removed by clean and some other files that
         can be easily regenerated, including any of the target
         documents.

     ant cleanest
       - remove all files that can be automaticall regenerated


  Most of these ant commands can also be issued from inside 
  a single document directory to clean/build/deploy that 
  specific document.

  -->

  <import file="${coursePrototype}/templates/ebookBuild.xml"/>
  <import file="${coursePrototype}/templates/imsccBuild.xml"/>

  <macrodef name="iterate">
    <attribute name="target"/>
    <sequential>
      <subant target="@{target}" failonerror="false" verbose="true">
	<fileset dir=".">
	  <include name="*/**/build.xml"/>
	  <exclude name="Directory/outline/**"/>
	  <exclude name="templates/**"/>
	  <exclude name="styles/**"/>
	  <exclude name="graphics/**"/>
	  <exclude name="AlgAE/**"/>
	</fileset>
      </subant>
      <subant target="@{target}" failonerror="false" verbose="true">
	<fileset dir=".">
	  <include name="Directory/outline/build.xml"/>
	</fileset>
      </subant>
    </sequential>
  </macrodef>

  <dependset>
    <srcfileset file="course.properties"/>
    <targetfileset file="course.info.tex"/>
  </dependset>    
  <available property="course.info.tex.exists" file="course.info.tex"/>
  <available property="section.dtd.exists" file="section.dtd"/>

  <property name="proto.styles.dir" location="${coursePrototype}/styles"/>
  <property name="proto.graphics.dir" location="${coursePrototype}/graphics"/>
  <property name="proto.templates.dir" location="${coursePrototype}/templates"/>
  <target name="syncFromPrototype">
    <sync todir="templates" 
	  overwrite="false" 
	  includeEmptyDirs="true" 
	  granularity="2000">
      <fileset dir="${proto.templates.dir}"/>
    </sync>
    <sync todir="graphics" 
	  overwrite="false" 
	  includeEmptyDirs="true" 
	  granularity="2000">
      <fileset dir="${proto.graphics.dir}"/>
    </sync>
    <sync todir="styles" 
	  overwrite="false" 
	  includeEmptyDirs="true" 
	  granularity="2000">
      <fileset dir="${proto.styles.dir}"/>
    </sync>
  </target>

  <target name="gensection.dtd" 
		  unless="section.dtd.exists">
  	<echo file="section.dtd"> </echo>
  </target>
	
  <target name="courseSetup" 
	  depends="syncFromPrototype,gensection.dtd" 
	  unless="course.info.tex.exists">
    <copy file="templates/course.info.tex" toFile="course.info.tex">
      <filterset>
	<filtersfile file="course.properties"/>
      </filterset>
    </copy>
    <replace file="course.info.tex" token="~" value="\%7E"/>
    <echo file="course.info.tex" append="true">
      % This file is generated automatically from course.properties
    </echo>
    <echo file="course.info.tex" append="true">
      % Do not edit. Any changes are likely to be overwritten.
    </echo>
  </target>

  <target name="emailSetup">
    <copy todir=".">
      <fileset dir='.' file="templates/sendEmail.html"/>
      <filterset>
	<filtersfile file="course.properties"/>
      </filterset>
    </copy>
  </target>

  <target name="setup" depends="courseSetup,emailSetup"
	    description="Prepare all source files prior to running LaTeX"
	    >
    <iterate target="setup"/>
  </target>

  <target name="generateDocs"  depends="courseSetup,emailSetup"
	  description="Generate all documents">
    <iterate target="build"/>
  </target>

  <target name="build"  depends="generateDocs,generateEbooks"
	  description="Generate all documents and ebooks">
  </target>

  <fileset id="deploy.files" dir=".">
    <exclude name="**/*~"/>
    <exclude name="**/templates/**"/>
    <exclude name="**/*.aux"/>
    <exclude name="**/*.fdb_latexmk"/>
    <exclude name="**/*.fls"/>
    <exclude name="**/*.log"/>
    <exclude name="**/*.out"/>
    <exclude name="**/*.toc"/>
    <exclude name="**/*.nav"/>
    <exclude name="**/*.snm"/>
    <exclude name="**/*.vrb"/>
    <exclude name="**/*.tex"/>
    <exclude name="**/*.ltx"/>
  </fileset>

  <target name="zip" depends="build"
	  description="Generate all documents and prepare a zip file that can be uploaded to and unpacked on a webserver"
	  >
    <tstamp>
      <format property="today" pattern="yyyy-MM-dd_hh-mm"/>
    </tstamp>
    <zip destfile="${courseName}_${today}.zip" level="9">
      <fileset refid="deploy.files"/>
    </zip>
  </target>


  <target name="imscc" depends="build,generateIMSCC"
	  description="Generate all documents and prepare a course cartridge for import into most LMS's"
	  >
  </target>

  <target name="bb" depends="build,generateBB"
	  description="Generate all documents and prepare a course cartridge for import into BlackBoard"
	  >
  </target>

  <target name="bbthin" depends="build,generateBBthin"
	  description="Generate all documents and prepare a thin course cartridge for import into BlackBoard"
	  >
  </target>

  <target name="canvas" depends="build,generateCanvas"
	  description="Generate all documents and prepare a course cartridge for import into Canvas"
	  >
  </target>

  <target name="canvasthin" depends="build,generateCanvasThin"
	  description="Generate all documents and prepare a thin course cartridge for import into Canvas"
	  >
  </target>


  <target name="clean">
    <iterate target="clean"/>
  </target>

  <target name="cleaner">
    <iterate target="cleaner"/>
    <delete file="${courseName}.epub"/>
    <delete file="${courseName}.mobi"/>
  </target>

  <target name="cleanest">
    <iterate target="cleanest"/>
  </target>

  <target name="deployBySsh" depends="build"
	  description="Generate all documents and sync with the deployment directory (usually a website) on a remote machine"
	  >
    <exec executable="rsync" failonerror="true">
      <arg value="-auzv"/>
      <arg value="-e"/>
      <arg value="ssh -i ${sshDeploymentKey}"/>
      <arg value="--exclude"/>
      <arg value="*~"/>
      <arg value="--exclude"/>
      <arg value="*.md"/>
      <arg value="--exclude"/>
      <arg value="*.mmd"/>
      <arg value="--exclude"/>
      <arg value="epub/**/*"/>
      <arg value="--exclude"/>
      <arg value=".git"/>
      <arg value="--exclude"/>
      <arg value="templates"/>
      <arg value="--exclude"/>
      <arg value=".gitignore"/>
      <arg value="--exclude"/>
      <arg value=".project"/>
      <arg value="--exclude"/>
      <arg value="section.dtd"/>
      <arg value="--exclude"/>
      <arg value="*.key"/>
      <arg value="--exclude"/>
      <arg value="CS*.zip"/>
      <arg value="--exclude"/>
      <arg value="CS*.imscc"/>
      <arg value="--exclude"/>
      <arg value="**/epub/**/*"/>
      <arg value="--exclude"/>
      <arg value="**/*~"/>
      <arg value="--exclude"/>
      <arg value="**/*.aux"/>
      <arg value="--exclude"/>
      <arg value="**/*.fdb_latexmk"/>
      <arg value="--exclude"/>
      <arg value="**/*.fls"/>
      <arg value="--exclude"/>
      <arg value="**/*.log"/>
      <arg value="--exclude"/>
      <arg value="**/*.out"/>
      <arg value="--exclude"/>
      <arg value="**/*.toc"/>
      <arg value="--exclude"/>
      <arg value="**/*.nav"/>
      <arg value="--exclude"/>
      <arg value="**/*.snm"/>
      <arg value="--exclude"/>
      <arg value="**/*.vrb"/>
      <arg value="--exclude"/>
      <arg value="**/*.tex"/>
      <arg value="--exclude"/>
      <arg value="**/*.ltx"/>
      <arg value="--exclude"/>
      <arg value="**/*.4ct"/>
      <arg value="--exclude"/>
      <arg value="**/*.4tc"/>
      <arg value="--exclude"/>
      <arg value="**/*.idv"/>
      <arg value="--exclude"/>
      <arg value="**/*.dvi"/>
      <arg value="--exclude"/>
      <arg value="**/*.lg"/>
      <arg value="--exclude"/>
      <arg value="**/*.tmp"/>
      <arg value="--exclude"/>
      <arg value="**/*.xref"/>
      
      <arg value="--exclude"/>
      <arg value=".ht*"/>
      
      <arg value="./"/>
      <arg value="${deploymentURL}"/>
    </exec>
  </target>
  
</project>
